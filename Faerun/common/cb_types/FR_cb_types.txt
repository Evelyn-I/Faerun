bhaalspawn_county_conquest = { 
	name = CB_NAME_BHAALSPAWN_CONQUEST
	war_name = WAR_BHAALSPAWN_CONQUEST
	sprite = 16
	truce_days = 1825
	hostile_against_others = yes
	is_permanent = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = no
	allowed_to_target_tributaries = yes
	#allowed_to_target_suzerains = yes - this seems to not be used in game anymore
	
	can_use_gui = {
		ROOT = {
			trait = bhaalspawn
		}
	}
	
	on_add = {
	}
	
	can_use = {
		ROOT = {
			NOT = { is_liege_or_above = FROM }
			mercenary = no
			is_nomadic = no # Use the 'pagan_county_conquest' CB instead
		}
	}

	can_use_title = {
		tier = count
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
				NOT = { same_realm = ROOT }
			}
		}
		
		ROOT = {
			trait = bhaalspawn
		}

		NOT = {
			OR = {
				ROOT = {
					has_landed_title = PREV
				}
				holder_scope = {
					is_liege_or_above = ROOT
				}
			}
		}
		
		location = {
			any_neighbor_province = {
				owner = {
					OR = {
						character = ROOT
						is_liege_or_above = ROOT
					}
				}
			}
		}
	}

	is_valid_title = {
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
	}

	on_success_title = {
		if = {
			limit = {
				holder_scope = {
					tier = count
					NOT = { num_of_count_titles = 2 }
					lower_tier_than = ROOT
				}
			}

			holder_scope = {
				set_defacto_liege = ROOT
			}
		}

		if = {
			limit = {
				holder_scope = {
					OR = {
						higher_tier_than = count
						num_of_count_titles = 2
						NOT = { lower_tier_than = ROOT }
					}
				}
			}

			usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
			any_de_jure_vassal_title = { # take all baronies under the one we're fighting for
				limit = {
					has_holder = yes
					NOT = {
						de_facto_liege = PREV
					}
					holder_scope = {
						OR = {
							character = FROM
							is_liege_or_above = FROM
						}
					}
				}

				usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
			}
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	on_fail_title = {
		ROOT = {
			prestige = -100
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}
	}

	on_reverse_demand = {
		ROOT = {
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}
	
	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
	
	ai_will_do = { 
		factor = 1.5
		
		modifier = {
			factor = 1.5 # Prefer using CB's without on_add costs
		}
	}
}

bhaalspawn_county_reconquest = { 
	name = CB_NAME_BHAALSPAWN_RECONQUEST
	war_name = WAR_BHAALSPAWN_RECONQUEST
	sprite = 16
	truce_days = 1825
	hostile_against_others = yes
	is_permanent = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = no
	allowed_to_target_tributaries = yes
	#allowed_to_target_suzerains = yes - this seems to not be used in game anymore
	
	can_use_gui = {
		FROM = {
			trait = bhaalspawn
		}
		ROOT = {
			NOT = {
				culture_group = monster_group
			}
		}
	}
	
	on_add = {
	}
	
	can_use = {
		ROOT = {
			NOT = { is_liege_or_above = FROM }
			mercenary = no
			is_nomadic = no # Use the 'pagan_county_conquest' CB instead
		}
	}

	can_use_title = {
		tier = count
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
				NOT = { same_realm = ROOT }
			}
		}
		
		FROM = {
			trait = bhaalspawn
		}

		NOT = {
			OR = {
				ROOT = {
					has_landed_title = PREV
				}
				holder_scope = {
					is_liege_or_above = ROOT
				}
			}
		}
		
		location = {
			any_neighbor_province = {
				owner = {
					OR = {
						character = ROOT
						is_liege_or_above = ROOT
					}
				}
			}
		}
	}

	is_valid_title = {
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
	}

	on_success_title = {
		if = {
			limit = {
				holder_scope = {
					tier = count
					NOT = { num_of_count_titles = 2 }
					lower_tier_than = ROOT
				}
			}

			holder_scope = {
				set_defacto_liege = ROOT
			}
		}

		if = {
			limit = {
				holder_scope = {
					OR = {
						higher_tier_than = count
						num_of_count_titles = 2
						NOT = { lower_tier_than = ROOT }
					}
				}
			}

			usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
			any_de_jure_vassal_title = { # take all baronies under the one we're fighting for
				limit = {
					has_holder = yes
					NOT = {
						de_facto_liege = PREV
					}
					holder_scope = {
						OR = {
							character = FROM
							is_liege_or_above = FROM
						}
					}
				}

				usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
			}
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	on_fail_title = {
		ROOT = {
			prestige = -100
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}
	}

	on_reverse_demand = {
		ROOT = {
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}
	
	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
	
	ai_will_do = { 
		factor = 1.5
		
		modifier = {
			factor = 1.5 # Prefer using CB's without on_add costs
		}
	}
}

monster_county_reconquest = { 
	name = CB_NAME_MONSTER_RECONQUEST
	war_name = WAR_MONSTER_RECONQUEST
	sprite = 16
	truce_days = 1825
	hostile_against_others = yes
	is_permanent = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = no
	allowed_to_target_tributaries = yes
	#allowed_to_target_suzerains = yes - this seems to not be used in game anymore
	
	can_use_gui = {
		FROM = {
			culture_group = monster_group
		}
		ROOT = {
			NOT = {
				culture_group = monster_group
			}
		}
	}
	
	on_add = {
	}
	
	can_use = {
		ROOT = {
			NOT = { is_liege_or_above = FROM }
			mercenary = no
			is_nomadic = no # Use the 'pagan_county_conquest' CB instead
		}
	}

	can_use_title = {
		tier = count
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
				NOT = { same_realm = ROOT }
			}
		}
		
		FROM = {
			culture_group = monster_group
		}

		NOT = {
			OR = {
				ROOT = {
					has_landed_title = PREV
				}
				holder_scope = {
					is_liege_or_above = ROOT
				}
			}
		}
		
		location = {
			any_neighbor_province = {
				owner = {
					OR = {
						character = ROOT
						is_liege_or_above = ROOT
					}
				}
			}
		}
	}

	is_valid_title = {
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
	}

	on_success_title = {
		ROOT = {
			random_realm_province = {
				PREVPREV = {
					location = {
						culture = PREVPREV
						religion = PREVPREV
					}
				}
			}
		}
		usurp_title_plus_barony_if_unlanded = ROOT
		FROM = {
			any_realm_character = {
				limit = {
					culture_group = monster_group
				}
				death = {
					death_reason = death_battle
					killer = ROOT
				}
			}
		}
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	on_fail_title = {
		ROOT = {
			prestige = -100
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}
	}

	on_reverse_demand = {
		ROOT = {
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}
	
	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
	
	ai_will_do = { 
		factor = 1.5
		
		modifier = {
			factor = 1.5 # Prefer using CB's without on_add costs
		}
	}
}

golddwarf_mountain_expedition = { 
	name = CB_NAME_GD_EXPEDITION
	war_name = WAR_GD_EXPEDITION
	sprite = 16
	truce_days = 356
	hostile_against_others = yes
	is_permanent = yes
	can_ask_to_join_war = no
	
	can_use = {
		ROOT = {
			NOT = { same_realm = FROM }
			NOT = {	is_allied_with = from }
			trait = creature_dwarf
			any_realm_province = {
				has_province_modifier = rift_overpop
				NOT = { has_province_flag = rift_overpop_dealingwith }
			}
		}
		FROM = {
			NOT = {
				trait = creature_dwarf
			}
		}
	}

	can_use_title = {
		FROM = {
			tier = COUNT
			location = {
				terrain = mountain
			}
		}
	}

	is_valid_title = {
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
	}
	
	on_add = {
		ROOT = {
			random_province = {
				limit = {
					has_province_modifier = rift_overpop
					NOT = { has_province_flag = rift_overpop_dealingwith }
				}
				spawn_unit = {
					province = THIS
					owner = ROOT
					leader = ROOT
					troops = {
						light_infantry = { 250 250 }
						heavy_infantry = { 150 150 }
						archers = { 100 100 }
					}
					maintenance_multiplier = 0.35
					can_toggle_looting = no
					disband_on_peace = yes
				}
				remove_province_modifier = rift_overpop
			}
		}
	}
	
	on_success = {
		ROOT = {
			prestige = 100
			participation_scaled_prestige = 100
		}
		FROM = {
			prestige = -100
		}
	}

	on_success_title = {
		create_character = {
			random_traits = yes
			trait = creature_dwarf
			female = no
			religion = dwarven_pantheon
			culture = gold_dwarf
			dynasty = random
		}
		new_character = {
			FROM = {
				usurp_title_plus_barony_if_unlanded = PREV
			}
			set_defacto_liege = ROOT
			any_demesne_province = {
				culture = gold_dwarf
			}
		}
	}

	on_fail_title = {
		ROOT = {
			prestige = -100
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}
	}

	on_reverse_demand = {
		ROOT = {
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}
	
	attacker_ai_victory_worth = {
		factor = -1
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
	
	ai_will_do = { 
		factor = 1.5
	}
}

# golddwarf_mountain_reclamation = { commented out because it causes errors for some reason
	# name = CB_NAME_GD_RECLAMATION
	# war_name = WAR_GD_RECLAMATION
	# sprite = 16
	# truce_days = 1825
	# hostile_against_others = yes
	# is_permanent = yes
	# can_ask_to_join_war = yes
	
	# can_use_gui = {
		# ROOT = {
			# NOT = { same_realm = FROM }
			# NOT = {	is_allied_with = from }
			# trait = creature_dwarf
			# culture = gold_dwarf
			# prestige = 200
		# }
		# FROM = {
			# NOT = {
				# trait = creature_dwarf
			# }
		# }
	# }

	# can_use_title = {
		# FROM = {
			# tier = COUNT
			# province = {
				# OR =  {
					# culture = shield_dwarf
					# culture = gold_dwarf
				# }
			# }
		# }
	# }

	# is_valid_title = {
		# OR = {
			# FROM = {
				# has_landed_title = PREV
			# }
			# holder_scope = {
				# is_liege_or_above = FROM
			# }
		# }
	# }
	
	# on_add = {
		# ROOT = {
			# prestige = -200
		# }
	# }
	
	# on_success = {
		# ROOT = {
			# prestige = 250
			# participation_scaled_prestige = 100
		# }
		# any_attacker = {
			# limit = { NOT = { character = ROOT } }
			# hidden_tooltip = { participation_scaled_prestige = 100 }
		# }
		# FROM = {
			# prestige = -100
		# }
	# }

	# on_success_title = {
		# create_character = {
			# random_traits = yes
			# trait = creature_dwarf
			# female = no
			# religion = dwarven_pantheon
			# culture = gold_dwarf
			# dynasty = random
		# }
		# new_character = {
			# FROM = {
				# usurp_title_plus_barony_if_unlanded = PREV
			# }
			# set_defacto_liege = ROOT
		# }
	# }

	# on_fail_title = {
		# ROOT = {
			# prestige = -300
			# piety = -150
		# }
		# any_defender = {
			# limit = { character = FROM }
			# participation_scaled_prestige = 50
		# }
		# any_defender = {
			# limit = { NOT = { character = FROM } }
			# hidden_tooltip = { participation_scaled_prestige = 50 }
		# }
	# }

	# on_reverse_demand = {
		# ROOT = {
			# prestige = -350
			# piety = -200
			# transfer_scaled_wealth = {
				# to = FROM
				# value = 4.0
			# }
		# }
		# any_defender = {
			# limit = { character = FROM }
			# participation_scaled_prestige = 100
		# }
		# any_defender = {
			# limit = { NOT = { character = FROM } }
			# hidden_tooltip = { participation_scaled_prestige = 100 }
		# }
	# }
	
	# attacker_ai_victory_worth = {
		# factor = -1
	# }
	
	# attacker_ai_defeat_worth = {
		# factor = 100
	# }

	# defender_ai_victory_worth = {
		# factor = -1
	# }
	
	# defender_ai_defeat_worth = {
		# factor = 100
	# }
	
	# ai_will_do = { 
		# factor = 1.5
	# }
# }